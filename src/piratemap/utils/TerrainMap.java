package piratemap.utils;

import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Random;

import javax.imageio.ImageIO;

public class TerrainMap
{
    private static final int[] WATER_CODES = new int[]{441, 442, 443};

    static 
    
    // Same data as terrain.tsx;
    int[] types = new int[] {
    0, // Darkdirt
    1, // Dirt
    2, // Grass
    3, // Lavarock
    4, // Water
    321, // Lava
    336, // Hole
    337, // PlowedSoil
    338, // Sand
    };

    static BufferedImage atlas;
    static HashMap<Long, Integer> map = new HashMap<>();
    
    // Tilewidth, tileheight
    private static final int TW = 32, TH = 32;
    private static void init() {
        try
        {
            atlas = ImageIO.read(new File("tiles/terrain.png"));
            
            for (int i = 0; i + 4 < _map.length; i+=5)
            {
                map.put(hash(_map[i+1], _map[i+2], _map[i+3], _map[i+4]), _map[i+0]);
            }
        } catch (IOException e)
        {
            e.printStackTrace();
            System.exit(1);
        }
        
    }
    
    private static long hash(int x, int y, int z, int w)
    {
        return x+
                (y<<9)
                +(z<<18)
                +(w<<27);
    }
    
    public static void printTile(Graphics2D g2, int destx, int desty,
            int w, int h, int t1, int t2, int t3, int t4)
    {
        
        long a = hash(t1, t2, t3, t4);
        Integer ti = map.get(a);
        if (ti == null)
        {
            System.out.printf("Not found %d %d %d %d\n", t1, t2, t3, t4);
            return;
        }
        
        if (ti == 4) // spice up water
        {
            int r = new Random().nextInt(20)-17;
            if (r > 0)
                ti = WATER_CODES[r];
        }
        
        int tix = ti % 16;
        int tiy = ti / 16;
        
        g2.drawImage(atlas, destx, desty, destx+w, desty+h, TW*tix, TH*tiy, TW*tix+TW, TH*tiy+TW, null);
    }
    
    private static int[] _map = new int[]{
    0, 0, 0, 0, 0,
    1, 1, 1, 1, 1,
    2, 2, 2, 2, 2,
    3, 3, 3, 3, 3,
    4, 4, 4, 4, 4,
    5, 1, 1, 1, 0,
    6, 1, 1, 1, 4,
    7, 1, 1, 1, 2,
    8, 1, 1, 0, 1,
    9, 1, 1, 0, 0,
    10, 1, 1, 0, 4,
    11, 1, 1, 0, 2,
    12, 1, 1, 4, 1,
    13, 1, 1, 4, 0,
    14, 1, 1, 4, 4,
    15, 1, 1, 4, 2,
    16, 1, 1, 2, 1,
    17, 1, 1, 2, 0,
    18, 1, 1, 2, 4,
    19, 1, 1, 2, 2,
    20, 1, 0, 1, 1,
    21, 1, 0, 1, 0,
    22, 1, 0, 1, 4,
    23, 1, 0, 1, 2,
    24, 1, 0, 0, 1,
    25, 1, 0, 0, 0,
    26, 1, 0, 0, 4,
    27, 1, 0, 0, 2,
    28, 1, 0, 4, 1,
    29, 1, 0, 4, 0,
    30, 1, 0, 4, 4,
    31, 1, 0, 4, 2,
    32, 1, 0, 2, 1,
    33, 1, 0, 2, 0,
    34, 1, 0, 2, 4,
    35, 1, 0, 2, 2,
    36, 1, 4, 1, 1,
    37, 1, 4, 1, 0,
    38, 1, 4, 1, 4,
    39, 1, 4, 1, 2,
    40, 1, 4, 0, 1,
    41, 1, 4, 0, 0,
    42, 1, 4, 0, 4,
    43, 1, 4, 0, 2,
    44, 1, 4, 4, 1,
    45, 1, 4, 4, 0,
    46, 1, 4, 4, 4,
    47, 1, 4, 4, 2,
    48, 1, 4, 2, 1,
    49, 1, 4, 2, 0,
    50, 1, 4, 2, 4,
    51, 1, 4, 2, 2,
    52, 1, 2, 1, 1,
    53, 1, 2, 1, 0,
    54, 1, 2, 1, 4,
    55, 1, 2, 1, 2,
    56, 1, 2, 0, 1,
    57, 1, 2, 0, 0,
    58, 1, 2, 0, 4,
    59, 1, 2, 0, 2,
    60, 1, 2, 4, 1,
    61, 1, 2, 4, 0,
    62, 1, 2, 4, 4,
    63, 1, 2, 4, 2,
    64, 1, 2, 2, 1,
    65, 1, 2, 2, 0,
    66, 1, 2, 2, 4,
    67, 1, 2, 2, 2,
    68, 0, 1, 1, 1,
    69, 0, 1, 1, 0,
    70, 0, 1, 1, 4,
    71, 0, 1, 1, 2,
    72, 0, 1, 0, 1,
    73, 0, 1, 0, 0,
    74, 0, 1, 0, 4,
    75, 0, 1, 0, 2,
    76, 0, 1, 4, 1,
    77, 0, 1, 4, 0,
    78, 0, 1, 4, 4,
    79, 0, 1, 4, 2,
    80, 0, 1, 2, 1,
    81, 0, 1, 2, 0,
    82, 0, 1, 2, 4,
    83, 0, 1, 2, 2,
    84, 0, 0, 1, 1,
    85, 0, 0, 1, 0,
    86, 0, 0, 1, 4,
    87, 0, 0, 1, 2,
    88, 0, 0, 0, 1,
    89, 0, 0, 0, 4,
    90, 0, 0, 0, 2,
    91, 0, 0, 4, 1,
    92, 0, 0, 4, 0,
    93, 0, 0, 4, 4,
    94, 0, 0, 4, 2,
    95, 0, 0, 2, 1,
    96, 0, 0, 2, 0,
    97, 0, 0, 2, 4,
    98, 0, 0, 2, 2,
    99, 0, 4, 1, 1,
    100, 0, 4, 1, 0,
    101, 0, 4, 1, 4,
    102, 0, 4, 1, 2,
    103, 0, 4, 0, 1,
    104, 0, 4, 0, 0,
    105, 0, 4, 0, 4,
    106, 0, 4, 0, 2,
    107, 0, 4, 4, 1,
    108, 0, 4, 4, 0,
    109, 0, 4, 4, 4,
    110, 0, 4, 4, 2,
    111, 0, 4, 2, 1,
    112, 0, 4, 2, 0,
    113, 0, 4, 2, 4,
    114, 0, 4, 2, 2,
    115, 0, 2, 1, 1,
    116, 0, 2, 1, 0,
    117, 0, 2, 1, 4,
    118, 0, 2, 1, 2,
    119, 0, 2, 0, 1,
    120, 0, 2, 0, 0,
    121, 0, 2, 0, 4,
    122, 0, 2, 0, 2,
    123, 0, 2, 4, 1,
    124, 0, 2, 4, 0,
    125, 0, 2, 4, 4,
    126, 0, 2, 4, 2,
    127, 0, 2, 2, 1,
    128, 0, 2, 2, 0,
    129, 0, 2, 2, 4,
    130, 0, 2, 2, 2,
    131, 4, 1, 1, 1,
    132, 4, 1, 1, 0,
    133, 4, 1, 1, 4,
    134, 4, 1, 1, 2,
    135, 4, 1, 0, 1,
    136, 4, 1, 0, 0,
    137, 4, 1, 0, 4,
    138, 4, 1, 0, 2,
    139, 4, 1, 4, 1,
    140, 4, 1, 4, 0,
    141, 4, 1, 4, 4,
    142, 4, 1, 4, 2,
    143, 4, 1, 2, 1,
    144, 4, 1, 2, 0,
    145, 4, 1, 2, 4,
    146, 4, 1, 2, 2,
    147, 4, 0, 1, 1,
    148, 4, 0, 1, 0,
    149, 4, 0, 1, 4,
    150, 4, 0, 1, 2,
    151, 4, 0, 0, 1,
    152, 4, 0, 0, 0,
    153, 4, 0, 0, 4,
    154, 4, 0, 0, 2,
    155, 4, 0, 4, 1,
    156, 4, 0, 4, 0,
    157, 4, 0, 4, 4,
    158, 4, 0, 4, 2,
    159, 4, 0, 2, 1,
    160, 4, 0, 2, 0,
    161, 4, 0, 2, 4,
    162, 4, 0, 2, 2,
    163, 4, 4, 1, 1,
    164, 4, 4, 1, 0,
    165, 4, 4, 1, 4,
    166, 4, 4, 1, 2,
    167, 4, 4, 0, 1,
    168, 4, 4, 0, 0,
    169, 4, 4, 0, 4,
    170, 4, 4, 0, 2,
    171, 4, 4, 4, 1,
    172, 4, 4, 4, 0,
    173, 4, 4, 4, 2,
    174, 4, 4, 2, 1,
    175, 4, 4, 2, 0,
    176, 4, 4, 2, 4,
    177, 4, 4, 2, 2,
    178, 4, 2, 1, 1,
    179, 4, 2, 1, 0,
    180, 4, 2, 1, 4,
    181, 4, 2, 1, 2,
    182, 4, 2, 0, 1,
    183, 4, 2, 0, 0,
    184, 4, 2, 0, 4,
    185, 4, 2, 0, 2,
    186, 4, 2, 4, 1,
    187, 4, 2, 4, 0,
    188, 4, 2, 4, 4,
    189, 4, 2, 4, 2,
    190, 4, 2, 2, 1,
    191, 4, 2, 2, 0,
    192, 4, 2, 2, 4,
    193, 4, 2, 2, 2,
    194, 2, 1, 1, 1,
    195, 2, 1, 1, 0,
    196, 2, 1, 1, 4,
    197, 2, 1, 1, 2,
    198, 2, 1, 0, 1,
    199, 2, 1, 0, 0,
    200, 2, 1, 0, 4,
    201, 2, 1, 0, 2,
    202, 2, 1, 4, 1,
    203, 2, 1, 4, 0,
    204, 2, 1, 4, 4,
    205, 2, 1, 4, 2,
    206, 2, 1, 2, 1,
    207, 2, 1, 2, 0,
    208, 2, 1, 2, 4,
    209, 2, 1, 2, 2,
    210, 2, 0, 1, 1,
    211, 2, 0, 1, 0,
    212, 2, 0, 1, 4,
    213, 2, 0, 1, 2,
    214, 2, 0, 0, 1,
    215, 2, 0, 0, 0,
    216, 2, 0, 0, 4,
    217, 2, 0, 0, 2,
    218, 2, 0, 4, 1,
    219, 2, 0, 4, 0,
    220, 2, 0, 4, 4,
    221, 2, 0, 4, 2,
    222, 2, 0, 2, 1,
    223, 2, 0, 2, 0,
    224, 2, 0, 2, 4,
    225, 2, 0, 2, 2,
    226, 2, 4, 1, 1,
    227, 2, 4, 1, 0,
    228, 2, 4, 1, 4,
    229, 2, 4, 1, 2,
    230, 2, 4, 0, 1,
    231, 2, 4, 0, 0,
    232, 2, 4, 0, 4,
    233, 2, 4, 0, 2,
    234, 2, 4, 4, 1,
    235, 2, 4, 4, 0,
    236, 2, 4, 4, 4,
    237, 2, 4, 4, 2,
    238, 2, 4, 2, 1,
    239, 2, 4, 2, 0,
    240, 2, 4, 2, 4,
    241, 2, 4, 2, 2,
    242, 2, 2, 1, 1,
    243, 2, 2, 1, 0,
    244, 2, 2, 1, 4,
    245, 2, 2, 1, 2,
    246, 2, 2, 0, 1,
    247, 2, 2, 0, 0,
    248, 2, 2, 0, 4,
    249, 2, 2, 0, 2,
    250, 2, 2, 4, 1,
    251, 2, 2, 4, 0,
    252, 2, 2, 4, 4,
    253, 2, 2, 4, 2,
    254, 2, 2, 2, 1,
    255, 2, 2, 2, 0,
    256, 2, 2, 2, 4,
    257, 0, 0, 0, 3,
    258, 0, 0, 2, 3,
    259, 0, 0, 3, 0,
    260, 0, 0, 3, 2,
    261, 0, 0, 3, 3,
    262, 0, 2, 0, 3,
    263, 0, 2, 2, 3,
    264, 0, 2, 3, 0,
    265, 0, 2, 3, 2,
    266, 0, 2, 3, 3,
    267, 0, 3, 0, 0,
    268, 0, 3, 0, 2,
    269, 0, 3, 0, 3,
    270, 0, 3, 2, 0,
    271, 0, 3, 2, 2,
    272, 0, 3, 2, 3,
    273, 0, 3, 3, 0,
    274, 0, 3, 3, 2,
    275, 0, 3, 3, 3,
    276, 2, 0, 0, 3,
    277, 2, 0, 2, 3,
    278, 2, 0, 3, 0,
    279, 2, 0, 3, 2,
    280, 2, 0, 3, 3,
    281, 2, 2, 0, 3,
    282, 2, 2, 2, 3,
    283, 2, 2, 3, 0,
    284, 2, 2, 3, 2,
    285, 2, 2, 3, 3,
    286, 2, 3, 0, 0,
    287, 2, 3, 0, 2,
    288, 2, 3, 0, 3,
    289, 2, 3, 2, 0,
    290, 2, 3, 2, 2,
    291, 2, 3, 2, 3,
    292, 2, 3, 3, 0,
    293, 2, 3, 3, 2,
    294, 2, 3, 3, 3,
    295, 3, 0, 0, 0,
    296, 3, 0, 0, 2,
    297, 3, 0, 0, 3,
    298, 3, 0, 2, 0,
    299, 3, 0, 2, 2,
    300, 3, 0, 2, 3,
    301, 3, 0, 3, 0,
    302, 3, 0, 3, 2,
    303, 3, 0, 3, 3,
    304, 3, 2, 0, 0,
    305, 3, 2, 0, 2,
    306, 3, 2, 0, 3,
    307, 3, 2, 2, 0,
    308, 3, 2, 2, 2,
    309, 3, 2, 2, 3,
    310, 3, 2, 3, 0,
    311, 3, 2, 3, 2,
    312, 3, 2, 3, 3,
    313, 3, 3, 0, 0,
    314, 3, 3, 0, 2,
    315, 3, 3, 0, 3,
    316, 3, 3, 2, 0,
    317, 3, 3, 2, 2,
    318, 3, 3, 2, 3,
    319, 3, 3, 3, 0,
    320, 3, 3, 3, 2,
    321, 5, 5, 5, 5,
    322, 5, 5, 5, 3,
    323, 5, 5, 3, 5,
    324, 5, 5, 3, 3,
    325, 5, 3, 5, 5,
    326, 5, 3, 5, 3,
    327, 5, 3, 3, 5,
    328, 5, 3, 3, 3,
    329, 3, 5, 5, 5,
    330, 3, 5, 5, 3,
    331, 3, 5, 3, 5,
    332, 3, 5, 3, 3,
    333, 3, 3, 5, 5,
    334, 3, 3, 5, 3,
    335, 3, 3, 3, 5,
    336, 6, 6, 6, 6,
    337, 7, 7, 7, 7,
    338, 8, 8, 8, 8,
    339, 7, 7, 7, 2,
    340, 7, 7, 2, 7,
    341, 7, 7, 2, 2,
    342, 7, 2, 7, 7,
    343, 7, 2, 7, 2,
    344, 7, 2, 2, 7,
    345, 7, 2, 2, 2,
    346, 2, 7, 7, 7,
    347, 2, 7, 7, 2,
    348, 2, 7, 2, 7,
    349, 2, 7, 2, 2,
    350, 2, 2, 7, 7,
    351, 2, 2, 7, 2,
    352, 2, 2, 2, 7,
    353, 1, 1, 1, 6,
    354, 1, 1, 6, 1,
    355, 1, 1, 6, 6,
    356, 1, 1, 6, 2,
    357, 1, 1, 2, 6,
    358, 1, 6, 1, 1,
    359, 1, 6, 1, 6,
    360, 1, 6, 1, 2,
    361, 1, 6, 6, 1,
    362, 1, 6, 6, 6,
    363, 1, 6, 6, 2,
    364, 1, 6, 2, 1,
    365, 1, 6, 2, 6,
    366, 1, 6, 2, 2,
    367, 1, 2, 1, 6,
    368, 1, 2, 6, 1,
    369, 1, 2, 6, 6,
    370, 1, 2, 6, 2,
    371, 1, 2, 2, 6,
    372, 6, 1, 1, 1,
    373, 6, 1, 1, 6,
    374, 6, 1, 1, 2,
    375, 6, 1, 6, 1,
    376, 6, 1, 6, 6,
    377, 6, 1, 6, 2,
    378, 6, 1, 2, 1,
    379, 6, 1, 2, 6,
    380, 6, 1, 2, 2,
    381, 6, 6, 1, 1,
    382, 6, 6, 1, 6,
    383, 6, 6, 1, 2,
    384, 6, 6, 6, 1,
    385, 6, 6, 6, 2,
    386, 6, 6, 2, 1,
    387, 6, 6, 2, 6,
    388, 6, 6, 2, 2,
    389, 6, 2, 1, 1,
    390, 6, 2, 1, 6,
    391, 6, 2, 1, 2,
    392, 6, 2, 6, 1,
    393, 6, 2, 6, 6,
    394, 6, 2, 6, 2,
    395, 6, 2, 2, 1,
    396, 6, 2, 2, 6,
    397, 6, 2, 2, 2,
    398, 2, 1, 1, 6,
    399, 2, 1, 6, 1,
    400, 2, 1, 6, 6,
    401, 2, 1, 6, 2,
    402, 2, 1, 2, 6,
    403, 2, 6, 1, 1,
    404, 2, 6, 1, 6,
    405, 2, 6, 1, 2,
    406, 2, 6, 6, 1,
    407, 2, 6, 6, 6,
    408, 2, 6, 6, 2,
    409, 2, 6, 2, 1,
    410, 2, 6, 2, 6,
    411, 2, 6, 2, 2,
    412, 2, 2, 1, 6,
    413, 2, 2, 6, 1,
    414, 2, 2, 6, 6,
    415, 2, 2, 6, 2,
    416, 2, 2, 2, 6,
    417, 8, 8, 8, 4,
    418, 8, 8, 4, 8,
    419, 8, 8, 4, 4,
    420, 8, 4, 8, 8,
    421, 8, 4, 8, 4,
    422, 8, 4, 4, 8,
    423, 8, 4, 4, 4,
    424, 4, 8, 8, 8,
    425, 4, 8, 8, 4,
    426, 4, 8, 4, 8,
    427, 4, 8, 4, 4,
    428, 4, 4, 8, 8,
    429, 4, 4, 8, 4,
    430, 4, 4, 4, 8,
//    431, 0, 0, 0, 0,
//    432, 0, 0, 0, 0,
//    433, 0, 0, 0, 0,
//    434, 1, 1, 1, 1,
//    435, 1, 1, 1, 1,
//    436, 2, 2, 2, 2,
//    437, 2, 2, 2, 2,
//    438, 2, 2, 2, 2,
//    439, 3, 3, 3, 3,
//    440, 3, 3, 3, 3,
//    441, 3, 3, 3, 3,
//    442, 4, 4, 4, 4,
//    443, 4, 4, 4, 4,
//    444, 4, 4, 4, 4,
//    445, 7, 7, 7, 7,
//    446, 7, 7, 7, 7,
//    447, 1, 1, 1, 1,
//    448, 8, 8, 8, 8,
//    449, 8, 8, 8, 8,
//    450, 8, 8, 8, 8,
//    451, 7, 7, 7, 7,
//    452, 5, 5, 5, 5,
//    453, 5, 5, 5, 5,
//    454, 5, 5, 5, 5,
//    455, 3, 3, 3, 3,
//    456, 3, 3, 3, 3,
//    457, 4, 4, 4, 4,
//    458, 4, 4, 4, 4,
    };

    static {
        init();
    }
}
